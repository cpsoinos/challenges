  [1m[36m (34.2ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (10.4ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (2.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateUsers (20150323175137)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (28.5ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL) [0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150323175137"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to CreateQuestions (20150323175342)
  [1m[35m (3.4ms)[0m  BEGIN
  [1m[36m (20.5ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150323175342"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
Migrating to CreateAnswers (20150323175557)
  [1m[35m (3.5ms)[0m  BEGIN
  [1m[36m (24.0ms)[0m  [1mCREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150323175557"]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (7.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (6.6ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (5.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (6.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateAnswers (20150323175557)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (6.6ms)[0m  DROP TABLE "answers"
  [1m[36mSQL (0.4ms)[0m  [1mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = $1[0m  [["version", "20150323175557"]]
  [1m[35m (10.5ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (6.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (5.6ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (2.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateAnswers (20150323175557)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (29.5ms)[0m  [1mCREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150323175557"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (6.0ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (5.5ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (5.9ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (2.0ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (6.1ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (5.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (5.7ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (1.9ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.4ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateAnswers (20150323175557)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (3.1ms)[0m  DROP TABLE "answers"
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = $1[0m  [["version", "20150323175557"]]
  [1m[35m (15.5ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (6.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (5.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (2.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateAnswers (20150323175557)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (28.7ms)[0m  [1mCREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150323175557"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (6.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (5.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (5.4ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (2.8ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mUser Exists (3.7ms)[0m  [1mSELECT  1 AS one FROM "users" WHERE "users"."email" = 'user1@example.com' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."password" = 'password' LIMIT 1
  [1m[36mSQL (4.0ms)[0m  [1mINSERT INTO "users" ("email", "password") VALUES ($1, $2) RETURNING "id"[0m  [["email", "user1@example.com"], ["password", "password"]]
  [1m[35m (1.5ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mQuestion Exists (3.0ms)[0m  SELECT  1 AS one FROM "questions" WHERE "questions"."title" = 'This is question numero 1! I don''t know the answer.' LIMIT 1
  [1m[36mSQL (2.2ms)[0m  [1mINSERT INTO "questions" ("title", "description", "user_id") VALUES ($1, $2, $3) RETURNING "id"[0m  [["title", "This is question numero 1! I don't know the answer."], ["description", "Aaaand this is the Question. Because, you just, you know, do the thing. And make sure that your answer is long enough! Because it was too short when I ran it last time."], ["user_id", 123]]
  [1m[35m (0.5ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (2.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mUser Exists (6.9ms)[0m  [1mSELECT  1 AS one FROM "users" WHERE "users"."email" = 'user1@example.com' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."password" = 'password' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (1.9ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mUser Exists (3.5ms)[0m  [1mSELECT  1 AS one FROM "users" WHERE "users"."email" = 'user1@example.com' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."password" = 'password' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (470.8ms)[0m  [1mDROP DATABASE IF EXISTS "rescue_mission_development"[0m
  [1m[35m (5040.8ms)[0m  DROP DATABASE IF EXISTS "rescue_mission_test"
PG::ObjectInUse: ERROR:  database "rescue_mission_test" is being accessed by other users
DETAIL:  There is 1 other session using the database.
: DROP DATABASE IF EXISTS "rescue_mission_test"
  [1m[36m (1998.3ms)[0m  [1mCREATE DATABASE "rescue_mission_development" ENCODING = 'unicode'[0m
  [1m[35m (0.7ms)[0m  CREATE DATABASE "rescue_mission_test" ENCODING = 'unicode'
PG::DuplicateDatabase: ERROR:  database "rescue_mission_test" already exists
: CREATE DATABASE "rescue_mission_test" ENCODING = 'unicode'
  [1m[36mSQL (2.8ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (44.7ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) 
  [1m[36m (23.7ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35m (24.9ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL) 
  [1m[36m (11.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (8.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (2.3ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175557')
  [1m[36m (0.6ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150323175137')[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175342')
  [1m[36mSQL (0.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (21.6ms)[0m  DROP TABLE "answers" CASCADE
  [1m[36m (36.6ms)[0m  [1mCREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35m (18.5ms)[0m  DROP TABLE "questions" CASCADE
  [1m[36m (25.6ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35m (18.5ms)[0m  DROP TABLE "users" CASCADE
  [1m[36m (22.8ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL) [0m
  [1m[35m (2.5ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (6.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mUser Exists (4.3ms)[0m  [1mSELECT  1 AS one FROM "users" WHERE "users"."email" = 'user1@example.com' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."password" = 'password' LIMIT 1
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "users" ("email", "password") VALUES ($1, $2) RETURNING "id"[0m  [["email", "user1@example.com"], ["password", "password"]]
  [1m[35m (0.5ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mQuestion Exists (2.6ms)[0m  SELECT  1 AS one FROM "questions" WHERE "questions"."title" = 'This is question numero 1! I don''t know the answer.' LIMIT 1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "questions" ("title", "description", "user_id") VALUES ($1, $2, $3) RETURNING "id"[0m  [["title", "This is question numero 1! I don't know the answer."], ["description", "Aaaand this is the Question. Because, you just, you know, do the thing. And make sure that your answer is long enough! Because it was too short when I ran it last time."], ["user_id", 123]]
  [1m[35m (0.6ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.7ms)[0m  INSERT INTO "answers" ("description", "question_id", "user_id") VALUES ($1, $2, $3) RETURNING "id"  [["description", "Seriously just do the thing. That's all you need. No minimum length, no maximum length, i don tknow why i'm stil typing is this long enough??? i sur ehope so. "], ["question_id", 123], ["user_id", 123]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[36m (337.8ms)[0m  [1mDROP DATABASE IF EXISTS "rescue_mission_development"[0m
  [1m[35m (445.3ms)[0m  DROP DATABASE IF EXISTS "rescue_mission_test"
  [1m[36m (1996.3ms)[0m  [1mCREATE DATABASE "rescue_mission_development" ENCODING = 'unicode'[0m
  [1m[35m (1801.3ms)[0m  CREATE DATABASE "rescue_mission_test" ENCODING = 'unicode'
  [1m[36mSQL (3.2ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (49.7ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) 
  [1m[36m (34.7ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35m (24.5ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL) 
  [1m[36m (11.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (9.3ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (2.3ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175557')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150323175137')[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175342')
  [1m[36mSQL (3.3ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (47.4ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) 
  [1m[36m (23.4ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35m (26.1ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL) 
  [1m[36m (12.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (8.2ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (2.1ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175557')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150323175137')[0m
  [1m[35m (0.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175342')
  [1m[36mActiveRecord::SchemaMigration Load (6.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mUser Exists (3.5ms)[0m  [1mSELECT  1 AS one FROM "users" WHERE "users"."email" = 'user1@example.com' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."password" = 'password' LIMIT 1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "users" ("email", "password") VALUES ($1, $2) RETURNING "id"[0m  [["email", "user1@example.com"], ["password", "password"]]
  [1m[35m (0.5ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mQuestion Exists (2.6ms)[0m  SELECT  1 AS one FROM "questions" WHERE "questions"."title" = 'This is question numero 1! I don''t know the answer.' LIMIT 1
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "questions" ("title", "description", "user_id") VALUES ($1, $2, $3) RETURNING "id"[0m  [["title", "This is question numero 1! I don't know the answer."], ["description", "Aaaand this is the Question. Because, you just, you know, do the thing. And make sure that your answer is long enough! Because it was too short when I ran it last time."], ["user_id", 123]]
  [1m[35m (0.5ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.9ms)[0m  INSERT INTO "answers" ("description", "question_id", "user_id") VALUES ($1, $2, $3) RETURNING "id"  [["description", "Seriously just do the thing. That's all you need. No minimum length, no maximum length, i don tknow why i'm stil typing is this long enough??? i sur ehope so. "], ["question_id", 123], ["user_id", 123]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (2.8ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (6.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (5.8ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (5.6ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (4.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (2.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mUser Exists (6.5ms)[0m  [1mSELECT  1 AS one FROM "users" WHERE "users"."email" = 'user1@example.com' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."password" = 'password' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (347.5ms)[0m  [1mDROP DATABASE IF EXISTS "rescue_mission_development"[0m
  [1m[35m (341.9ms)[0m  DROP DATABASE IF EXISTS "rescue_mission_test"
  [1m[36m (1688.0ms)[0m  [1mCREATE DATABASE "rescue_mission_development" ENCODING = 'unicode'[0m
  [1m[35m (1673.9ms)[0m  CREATE DATABASE "rescue_mission_test" ENCODING = 'unicode'
  [1m[36mSQL (3.3ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (45.9ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) 
  [1m[36m (23.5ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35m (22.7ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL) 
  [1m[36m (12.2ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (7.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (2.3ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175557')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150323175137')[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175342')
  [1m[36mSQL (2.8ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (44.3ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) 
  [1m[36m (22.9ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35m (25.2ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL) 
  [1m[36m (11.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (8.0ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (2.5ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175557')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150323175137')[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175342')
  [1m[36mActiveRecord::SchemaMigration Load (6.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mUser Exists (4.0ms)[0m  [1mSELECT  1 AS one FROM "users" WHERE "users"."email" = 'user1@example.com' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."password" = 'password' LIMIT 1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "users" ("email", "password") VALUES ($1, $2) RETURNING "id"[0m  [["email", "user1@example.com"], ["password", "password"]]
  [1m[35m (0.5ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mQuestion Exists (2.7ms)[0m  SELECT  1 AS one FROM "questions" WHERE "questions"."title" = 'This is question numero 1! I don''t know the answer.' LIMIT 1
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "questions" ("title", "description", "user_id") VALUES ($1, $2, $3) RETURNING "id"[0m  [["title", "This is question numero 1! I don't know the answer."], ["description", "Aaaand this is the Question. Because, you just, you know, do the thing. And make sure that your answer is long enough! Because it was too short when I ran it last time."], ["user_id", 123]]
  [1m[35m (0.5ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (2.9ms)[0m  INSERT INTO "answers" ("description", "question_id", "user_id") VALUES ($1, $2, $3) RETURNING "id"  [["description", "Seriously just do the thing. That's all you need. No minimum length, no maximum length, i don tknow why i'm stil typing is this long enough??? i sur ehope so. "], ["question_id", 123], ["user_id", 123]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[36m (347.7ms)[0m  [1mDROP DATABASE IF EXISTS "rescue_mission_development"[0m
  [1m[35m (340.6ms)[0m  DROP DATABASE IF EXISTS "rescue_mission_test"
  [1m[36m (1707.6ms)[0m  [1mCREATE DATABASE "rescue_mission_development" ENCODING = 'unicode'[0m
  [1m[35m (1695.3ms)[0m  CREATE DATABASE "rescue_mission_test" ENCODING = 'unicode'
  [1m[36mSQL (3.0ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (46.1ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) 
  [1m[36m (21.5ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35m (23.6ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL) 
  [1m[36m (11.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (9.0ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (2.5ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175557')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150323175137')[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175342')
  [1m[36mSQL (3.7ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (45.3ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) 
  [1m[36m (23.8ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35m (103.2ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL) 
  [1m[36m (16.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (12.1ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (2.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175557')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150323175137')[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175342')
  [1m[36mActiveRecord::SchemaMigration Load (10.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36mUser Exists (4.5ms)[0m  [1mSELECT  1 AS one FROM "users" WHERE "users"."email" = 'user1@example.com' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."password" = 'password' LIMIT 1
  [1m[36mSQL (1.4ms)[0m  [1mINSERT INTO "users" ("email", "password") VALUES ($1, $2) RETURNING "id"[0m  [["email", "user1@example.com"], ["password", "password"]]
  [1m[35m (8.4ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mQuestion Exists (3.2ms)[0m  SELECT  1 AS one FROM "questions" WHERE "questions"."title" = 'This is question numero 1! I don''t know the answer.' LIMIT 1
  [1m[36mSQL (1.8ms)[0m  [1mINSERT INTO "questions" ("title", "description", "user_id") VALUES ($1, $2, $3) RETURNING "id"[0m  [["title", "This is question numero 1! I don't know the answer."], ["description", "Aaaand this is the Question. Because, you just, you know, do the thing. And make sure that your answer is long enough! Because it was too short when I ran it last time."], ["user_id", 123]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (3.2ms)[0m  INSERT INTO "answers" ("description", "question_id", "user_id") VALUES ($1, $2, $3) RETURNING "id"  [["description", "Seriously just do the thing. That's all you need. No minimum length, no maximum length, i don tknow why i'm stil typing is this long enough??? i sur ehope so. "], ["question_id", 123], ["user_id", 123]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m


Started GET "/" for ::1 at 2015-03-23 17:51:35 -0400
  [1m[36mActiveRecord::SchemaMigration Load (2.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by QuestionsController#index as HTML
  [1m[35m (16.7ms)[0m  SELECT COUNT(*) FROM "questions"
  [1m[36mQuestion Load (0.6ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (2456.4ms)
Completed 500 Internal Server Error in 2506ms (ActiveRecord: 31.3ms)

ActionView::Template::Error (undefined method `created_at' for #<Question:0x007f806bc58800>):
    11:     <%- @questions.each do |question| -%>
    12:       <tr>
    13:         <td><%= question.title %></td>
    14:         <td><%= question.created_at %></td>
    15:       </tr>
    16:     <%- end -%>
    17:   </table>
  app/views/questions/index.html.erb:14:in `block in _app_views_questions_index_html_erb__1322545897685685352_70094758737480'
  app/views/questions/index.html.erb:11:in `_app_views_questions_index_html_erb__1322545897685685352_70094758737480'


  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_source.erb (7.5ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (17.0ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (91.3ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_markup.html.erb (0.5ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/style.css.erb within layouts/inlined_string (0.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_inner_console_markup.html.erb within layouts/inlined_string (0.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_prompt_box_markup.html.erb within layouts/inlined_string (0.6ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/console.js.erb within layouts/javascript (62.5ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/main.js.erb within layouts/javascript (0.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/error_page.js.erb within layouts/javascript (0.5ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/index.html.erb (139.3ms)


Started GET "/" for ::1 at 2015-03-23 17:53:02 -0400
Processing by QuestionsController#index as HTML
  [1m[35m (0.7ms)[0m  SELECT COUNT(*) FROM "questions"
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (4483.3ms)
Completed 500 Internal Server Error in 4495ms (ActiveRecord: 1.1ms)

ActionView::Template::Error (undefined method `created_at' for #<Question:0x007f806edf5b60>):
    11:     <%- @questions.each do |question| -%>
    12:       <tr>
    13:         <td><%= question.title %></td>
    14:         <td><%= question.time_ago_in_words(question.created_at) %></td>
    15:       </tr>
    16:     <%- end -%>
    17:   </table>
  app/views/questions/index.html.erb:14:in `block in _app_views_questions_index_html_erb__1322545897685685352_70094771929340'
  app/views/questions/index.html.erb:11:in `_app_views_questions_index_html_erb__1322545897685685352_70094771929340'


  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_source.erb (7.1ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (3.3ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.5ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (64.5ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_markup.html.erb (0.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/style.css.erb within layouts/inlined_string (0.7ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_inner_console_markup.html.erb within layouts/inlined_string (0.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_prompt_box_markup.html.erb within layouts/inlined_string (0.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/console.js.erb within layouts/javascript (51.7ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/main.js.erb within layouts/javascript (0.6ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/error_page.js.erb within layouts/javascript (0.5ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/index.html.erb (114.1ms)


Started GET "/" for ::1 at 2015-03-23 17:53:20 -0400
Processing by QuestionsController#index as HTML
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "questions"
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (6.6ms)
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.7ms)

ActionView::Template::Error (undefined method `created_at' for #<Question:0x007f8070210208>):
    10:     <%- @questions.each do |question| -%>
    11:       <tr>
    12:         <td><%= question.title %></td>
    13:         <td><%= question.time_ago_in_words(question.created_at) %></td>
    14:       </tr>
    15:     <%- end -%>
    16:   </table>
  app/views/questions/index.html.erb:13:in `block in _app_views_questions_index_html_erb__1322545897685685352_70094795820760'
  app/views/questions/index.html.erb:10:in `_app_views_questions_index_html_erb__1322545897685685352_70094795820760'


  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_source.erb (9.8ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.9ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.3ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (66.9ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_markup.html.erb (0.6ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/style.css.erb within layouts/inlined_string (0.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_inner_console_markup.html.erb within layouts/inlined_string (0.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_prompt_box_markup.html.erb within layouts/inlined_string (0.3ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/console.js.erb within layouts/javascript (58.5ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/main.js.erb within layouts/javascript (0.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/error_page.js.erb within layouts/javascript (0.5ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/index.html.erb (120.4ms)


Started GET "/" for ::1 at 2015-03-23 17:53:32 -0400
Processing by QuestionsController#index as HTML
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "questions"
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (9.7ms)
Completed 500 Internal Server Error in 18ms (ActiveRecord: 0.9ms)

ActionView::Template::Error (undefined method `time_ago_in_words' for #<Question:0x007f80700029c0>):
    10:     <%- @questions.each do |question| -%>
    11:       <tr>
    12:         <td><%= question.title %></td>
    13:         <td><%= question.time_ago_in_words(question) %></td>
    14:       </tr>
    15:     <%- end -%>
    16:   </table>
  app/views/questions/index.html.erb:13:in `block in _app_views_questions_index_html_erb__1322545897685685352_70094794639420'
  app/views/questions/index.html.erb:10:in `_app_views_questions_index_html_erb__1322545897685685352_70094794639420'


  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_source.erb (5.2ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.6ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (0.9ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/actionpack-4.2.1/lib/action_dispatch/middleware/templates/rescues/template_error.html.erb within rescues/layout (59.1ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_markup.html.erb (0.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/style.css.erb within layouts/inlined_string (0.3ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_inner_console_markup.html.erb within layouts/inlined_string (0.3ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/_prompt_box_markup.html.erb within layouts/inlined_string (0.4ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/console.js.erb within layouts/javascript (50.5ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/main.js.erb within layouts/javascript (0.3ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/error_page.js.erb within layouts/javascript (0.5ms)
  Rendered /Users/cpsoinos/.gem/ruby/2.2.0/gems/web-console-2.1.2/lib/web_console/templates/index.html.erb (110.4ms)
  [1m[36m (344.5ms)[0m  [1mDROP DATABASE IF EXISTS "rescue_mission_development"[0m
  [1m[35m (338.7ms)[0m  DROP DATABASE IF EXISTS "rescue_mission_test"
  [1m[36m (1839.3ms)[0m  [1mCREATE DATABASE "rescue_mission_development" ENCODING = 'unicode'[0m
  [1m[35m (1676.3ms)[0m  CREATE DATABASE "rescue_mission_test" ENCODING = 'unicode'
  [1m[36mSQL (3.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (44.1ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) 
  [1m[36m (21.9ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35m (24.4ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL) 
  [1m[36m (12.2ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (9.2ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (2.3ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175557')
  [1m[36m (0.4ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150323175137')[0m
  [1m[35m (0.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175342')
  [1m[36mSQL (3.1ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (48.4ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL) 
  [1m[36m (21.5ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL) [0m
  [1m[35m (23.3ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL) 
  [1m[36m (10.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (10.0ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (2.4ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175557')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150323175137')[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175342')
  [1m[36mActiveRecord::SchemaMigration Load (6.9ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mUser Exists (3.5ms)[0m  [1mSELECT  1 AS one FROM "users" WHERE "users"."email" = 'user1@example.com' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."password" = 'password' LIMIT 1
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "users" ("email", "password") VALUES ($1, $2) RETURNING "id"[0m  [["email", "user1@example.com"], ["password", "password"]]
  [1m[35m (0.5ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mQuestion Exists (2.4ms)[0m  SELECT  1 AS one FROM "questions" WHERE "questions"."title" = 'This is question numero 1! I don''t know the answer.' LIMIT 1
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "questions" ("title", "description", "user_id") VALUES ($1, $2, $3) RETURNING "id"[0m  [["title", "This is question numero 1! I don't know the answer."], ["description", "Aaaand this is the Question. Because, you just, you know, do the thing. And make sure that your answer is long enough! Because it was too short when I ran it last time."], ["user_id", 123]]
  [1m[35m (1.3ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (3.0ms)[0m  INSERT INTO "answers" ("description", "question_id", "user_id") VALUES ($1, $2, $3) RETURNING "id"  [["description", "Seriously just do the thing. That's all you need. No minimum length, no maximum length, i don tknow why i'm stil typing is this long enough??? i sur ehope so. "], ["question_id", 123], ["user_id", 123]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (2.9ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.4ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateAnswers (20150323175557)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (5.4ms)[0m  DROP TABLE "answers"
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = $1[0m  [["version", "20150323175557"]]
  [1m[35m (15.6ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (4.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (4.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (2.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateQuestions (20150323175342)
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35m (2.5ms)[0m  DROP TABLE "questions"
  [1m[36mSQL (0.5ms)[0m  [1mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = $1[0m  [["version", "20150323175342"]]
  [1m[35m (14.9ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (6.5ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36mActiveRecord::SchemaMigration Load (2.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateUsers (20150323175137)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35m (1.8ms)[0m  DROP TABLE "users"
  [1m[36mSQL (0.4ms)[0m  [1mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = $1[0m  [["version", "20150323175137"]]
  [1m[35m (15.1ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (2.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateUsers (20150323175137)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (29.7ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150323175137"]]
  [1m[36m (1.1ms)[0m  [1mCOMMIT[0m
Migrating to CreateQuestions (20150323175342)
  [1m[35m (4.0ms)[0m  BEGIN
  [1m[36m (21.1ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150323175342"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
Migrating to CreateAnswers (20150323175557)
  [1m[35m (3.6ms)[0m  BEGIN
  [1m[36m (23.8ms)[0m  [1mCREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150323175557"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (6.8ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (5.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (6.1ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m


Started GET "/" for ::1 at 2015-03-23 18:02:29 -0400
  [1m[36mActiveRecord::SchemaMigration Load (3.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by QuestionsController#index as HTML
  [1m[35m (2.4ms)[0m  SELECT COUNT(*) FROM "questions"
  Rendered questions/index.html.erb within layouts/application (10.1ms)
Completed 200 OK in 279ms (Views: 250.7ms | ActiveRecord: 4.0ms)


Started GET "/assets/application-378c8739237292dbbedfcfe67f3185f0.js?body=1" for ::1 at 2015-03-23 18:02:30 -0400


Started GET "/assets/jquery_ujs-e27bd20a10d28155845a22d71ef94f2f.js?body=1" for ::1 at 2015-03-23 18:02:30 -0400


Started GET "/assets/application-5266d2988799ecc8fe6e81eaab412e7d.css?body=1" for ::1 at 2015-03-23 18:02:30 -0400


Started GET "/assets/jquery-87424c3c19e96d4fb033c10ebe21ec40.js?body=1" for ::1 at 2015-03-23 18:02:30 -0400


Started GET "/" for ::1 at 2015-03-23 18:03:19 -0400
Processing by QuestionsController#index as HTML
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(*) FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (2.0ms)
Completed 200 OK in 30ms (Views: 29.6ms | ActiveRecord: 0.5ms)


Started GET "/assets/jquery-87424c3c19e96d4fb033c10ebe21ec40.js?body=1" for ::1 at 2015-03-23 18:03:20 -0400


Started GET "/assets/jquery_ujs-e27bd20a10d28155845a22d71ef94f2f.js?body=1" for ::1 at 2015-03-23 18:03:20 -0400


Started GET "/assets/application-5266d2988799ecc8fe6e81eaab412e7d.css?body=1" for ::1 at 2015-03-23 18:03:20 -0400


Started GET "/assets/application-378c8739237292dbbedfcfe67f3185f0.js?body=1" for ::1 at 2015-03-23 18:03:20 -0400


Started GET "/" for ::1 at 2015-03-23 18:15:13 -0400
  [1m[36mActiveRecord::SchemaMigration Load (3.8ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by QuestionsController#index as HTML
  [1m[35m (7.7ms)[0m  SELECT COUNT(*) FROM "questions"
  Rendered questions/index.html.erb within layouts/application (52.4ms)
Completed 200 OK in 770ms (Views: 691.1ms | ActiveRecord: 10.5ms)


Started GET "/assets/jquery-87424c3c19e96d4fb033c10ebe21ec40.js?body=1" for ::1 at 2015-03-23 18:15:18 -0400


Started GET "/assets/application-5266d2988799ecc8fe6e81eaab412e7d.css?body=1" for ::1 at 2015-03-23 18:15:18 -0400


Started GET "/assets/jquery_ujs-e27bd20a10d28155845a22d71ef94f2f.js?body=1" for ::1 at 2015-03-23 18:15:18 -0400


Started GET "/assets/application-378c8739237292dbbedfcfe67f3185f0.js?body=1" for ::1 at 2015-03-23 18:15:18 -0400


Started GET "/" for ::1 at 2015-03-23 18:15:44 -0400
Processing by QuestionsController#index as HTML
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  Rendered questions/index.html.erb within layouts/application (1.6ms)
Completed 200 OK in 28ms (Views: 26.8ms | ActiveRecord: 0.5ms)


Started GET "/assets/application-5266d2988799ecc8fe6e81eaab412e7d.css?body=1" for ::1 at 2015-03-23 18:15:44 -0400


Started GET "/assets/jquery-87424c3c19e96d4fb033c10ebe21ec40.js?body=1" for ::1 at 2015-03-23 18:15:44 -0400


Started GET "/assets/jquery_ujs-e27bd20a10d28155845a22d71ef94f2f.js?body=1" for ::1 at 2015-03-23 18:15:44 -0400


Started GET "/assets/application-378c8739237292dbbedfcfe67f3185f0.js?body=1" for ::1 at 2015-03-23 18:15:44 -0400


Started GET "/" for ::1 at 2015-03-23 18:17:12 -0400
Processing by QuestionsController#index as HTML
  [1m[35mQuestion Load (0.5ms)[0m  SELECT "questions".* FROM "questions"
  Rendered questions/index.html.erb within layouts/application (39017.6ms)
Completed 200 OK in 39048ms (Views: 39044.5ms | ActiveRecord: 0.5ms)


Started GET "/assets/application-5266d2988799ecc8fe6e81eaab412e7d.css?body=1" for ::1 at 2015-03-23 18:17:52 -0400


Started GET "/assets/jquery_ujs-e27bd20a10d28155845a22d71ef94f2f.js?body=1" for ::1 at 2015-03-23 18:17:52 -0400


Started GET "/assets/application-378c8739237292dbbedfcfe67f3185f0.js?body=1" for ::1 at 2015-03-23 18:17:52 -0400


Started GET "/assets/jquery-87424c3c19e96d4fb033c10ebe21ec40.js?body=1" for ::1 at 2015-03-23 18:17:52 -0400
  [1m[36mActiveRecord::SchemaMigration Load (2.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mUser Exists (3.8ms)[0m  [1mSELECT  1 AS one FROM "users" WHERE "users"."email" = 'user1@example.com' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."password" = 'password' LIMIT 1
  [1m[36mSQL (3.8ms)[0m  [1mINSERT INTO "users" ("email", "password", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["email", "user1@example.com"], ["password", "password"], ["created_at", "2015-03-23 22:18:05.029220"], ["updated_at", "2015-03-23 22:18:05.029220"]]
  [1m[35m (1.8ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mQuestion Exists (2.6ms)[0m  SELECT  1 AS one FROM "questions" WHERE "questions"."title" = 'This is question numero 1! I don''t know the answer.' LIMIT 1
  [1m[36mSQL (2.5ms)[0m  [1mINSERT INTO "questions" ("title", "description", "user_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["title", "This is question numero 1! I don't know the answer."], ["description", "Aaaand this is the Question. Because, you just, you know, do the thing. And make sure that your answer is long enough! Because it was too short when I ran it last time."], ["user_id", 123], ["created_at", "2015-03-23 22:18:05.062663"], ["updated_at", "2015-03-23 22:18:05.062663"]]
  [1m[35m (0.5ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (4.7ms)[0m  INSERT INTO "answers" ("description", "question_id", "user_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["description", "Seriously just do the thing. That's all you need. No minimum length, no maximum length, i don tknow why i'm stil typing is this long enough??? i sur ehope so. "], ["question_id", 123], ["user_id", 123], ["created_at", "2015-03-23 22:18:05.080200"], ["updated_at", "2015-03-23 22:18:05.080200"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[36m (457.4ms)[0m  [1mDROP DATABASE IF EXISTS "rescue_mission_test"[0m
  [1m[35m (1950.4ms)[0m  CREATE DATABASE "rescue_mission_test" ENCODING = 'unicode'
  [1m[36mSQL (3.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (44.7ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "description" character varying NOT NULL, "question_id" integer NOT NULL, "user_id" integer NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (22.9ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "title" character varying NOT NULL, "description" character varying NOT NULL, "user_id" integer NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (24.0ms)[0m  CREATE TABLE "users" ("id" serial primary key, "email" character varying NOT NULL, "password" character varying NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (11.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (9.7ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (2.3ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175557')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150323175137')[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150323175342')
